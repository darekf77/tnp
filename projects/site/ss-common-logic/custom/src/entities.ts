
//// FILE GENERATED BY TNP /////
import { META } from 'morphi';

import { Entities as BaselineEntities }  from 'baseline/ss-common-logic/src/entities';
import * as baslineEntites from 'baseline/ss-common-logic/src/entities';
export * from 'baseline/ss-common-logic/src/entities';



import { BUILD, IBUILD } from './entities/BUILD';
export { BUILD, IBUILD } from './entities/BUILD';

import { DOMAIN, IDOMAIN } from './entities/DOMAIN';
export { DOMAIN, IDOMAIN } from './entities/DOMAIN';

export const Entities:META.BASE_ENTITY<any>[] = [
BUILD,
DOMAIN
].concat(BaselineEntities as any) as any;

//#region @backend


import {   BUILD_REPOSITORY } from './repositories/BUILD_REPOSITORY';

import {   DOMAIN_REPOSITORY } from './repositories/DOMAIN_REPOSITORY';

import { Repository } from "typeorm";
export { Repository } from "typeorm";
import * as _ from 'lodash'

import {  Connection } from 'morphi';

export function entities<ADDITIONAL={}>(connection?: Connection, decoratorsEntities?: ADDITIONAL) {
return _.merge(baslineEntites.entities(connection),{

BUILD: META.repositoryFrom<BUILD , BUILD_REPOSITORY>(connection, BUILD , BUILD_REPOSITORY),

DOMAIN: META.repositoryFrom<DOMAIN , DOMAIN_REPOSITORY>(connection, DOMAIN , DOMAIN_REPOSITORY),
}  );
}
//#endregion
