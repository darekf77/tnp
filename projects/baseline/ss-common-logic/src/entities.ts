
//// FILE GENERATED BY TNP /////
import { META } from 'morphi';



import { CATEGORY, ICATEGORY } from './entities/CATEGORY';
export { CATEGORY, ICATEGORY } from './entities/CATEGORY';

import { CONFIG, ICONFIG } from './entities/CONFIG';
export { CONFIG, ICONFIG } from './entities/CONFIG';

import { EMAIL_TYPE, IEMAIL_TYPE } from './entities/core/EMAIL_TYPE';
export { EMAIL_TYPE, IEMAIL_TYPE } from './entities/core/EMAIL_TYPE';

import { EMAIL, IEMAIL } from './entities/core/EMAIL';
export { EMAIL, IEMAIL } from './entities/core/EMAIL';

import { MULTIMEDIA, IMULTIMEDIA } from './entities/core/MULTIMEDIA';
export { MULTIMEDIA, IMULTIMEDIA } from './entities/core/MULTIMEDIA';

import { SESSION, ISESSION } from './entities/core/SESSION';
export { SESSION, ISESSION } from './entities/core/SESSION';

import { USER, IUSER } from './entities/core/USER';
export { USER, IUSER } from './entities/core/USER';

import { DIALOG, IDIALOG } from './entities/DIALOG';
export { DIALOG, IDIALOG } from './entities/DIALOG';

import { EXAMPLE_PAGINATION, IEXAMPLE_PAGINATION } from './entities/EXAMPLE_PAGINATION';
export { EXAMPLE_PAGINATION, IEXAMPLE_PAGINATION } from './entities/EXAMPLE_PAGINATION';

import { EXAMPLE, IEXAMPLE } from './entities/EXAMPLE';
export { EXAMPLE, IEXAMPLE } from './entities/EXAMPLE';

import { GROUP, IGROUP } from './entities/GROUP';
export { GROUP, IGROUP } from './entities/GROUP';

import { PROGRESS_BAR_DATA, IPROGRESS_BAR_DATA } from './entities/PROGRESS_BAR_DATA';
export { PROGRESS_BAR_DATA, IPROGRESS_BAR_DATA } from './entities/PROGRESS_BAR_DATA';

export const Entities:META.BASE_ENTITY<any>[] = [
CATEGORY,
CONFIG,
EMAIL_TYPE,
EMAIL,
MULTIMEDIA,
SESSION,
USER,
DIALOG,
EXAMPLE_PAGINATION,
EXAMPLE,
GROUP,
PROGRESS_BAR_DATA
] as any;

//#region @backend


import {   CATEGORY_REPOSITORY } from './repositories/CATEGORY_REPOSITORY';
export {   CATEGORY_REPOSITORY } from './repositories/CATEGORY_REPOSITORY';

import {   CONFIG_REPOSITORY } from './repositories/CONFIG_REPOSITORY';
export {   CONFIG_REPOSITORY } from './repositories/CONFIG_REPOSITORY';

import {   EMAIL_TYPE_REPOSITORY } from './repositories/core/EMAIL_TYPE_REPOSITORY';
export {   EMAIL_TYPE_REPOSITORY } from './repositories/core/EMAIL_TYPE_REPOSITORY';

import {   EMAIL_REPOSITORY } from './repositories/core/EMAIL_REPOSITORY';
export {   EMAIL_REPOSITORY } from './repositories/core/EMAIL_REPOSITORY';

import {   MULTIMEDIA_REPOSITORY } from './repositories/core/MULTIMEDIA_REPOSITORY';
export {   MULTIMEDIA_REPOSITORY } from './repositories/core/MULTIMEDIA_REPOSITORY';

import {   SESSION_REPOSITORY } from './repositories/core/SESSION_REPOSITORY';
export {   SESSION_REPOSITORY } from './repositories/core/SESSION_REPOSITORY';

import {   USER_REPOSITORY } from './repositories/core/USER_REPOSITORY';
export {   USER_REPOSITORY } from './repositories/core/USER_REPOSITORY';

import {   DIALOG_REPOSITORY } from './repositories/DIALOG_REPOSITORY';
export {   DIALOG_REPOSITORY } from './repositories/DIALOG_REPOSITORY';

import {   EXAMPLE_PAGINATION_REPOSITORY } from './repositories/EXAMPLE_PAGINATION_REPOSITORY';
export {   EXAMPLE_PAGINATION_REPOSITORY } from './repositories/EXAMPLE_PAGINATION_REPOSITORY';

import {   EXAMPLE_REPOSITORY } from './repositories/EXAMPLE_REPOSITORY';
export {   EXAMPLE_REPOSITORY } from './repositories/EXAMPLE_REPOSITORY';

import {   GROUP_REPOSITORY } from './repositories/GROUP_REPOSITORY';
export {   GROUP_REPOSITORY } from './repositories/GROUP_REPOSITORY';


import { Repository } from "typeorm";
export { Repository } from "typeorm";
import * as _ from 'lodash'

import {  Connection } from 'morphi';

export function entities<ADDITIONAL={}>(connection?: Connection, decoratorsEntities?: ADDITIONAL) {
return _.merge({

CATEGORY: META.repositoryFrom<CATEGORY , CATEGORY_REPOSITORY>(connection, CATEGORY , CATEGORY_REPOSITORY),

CONFIG: META.repositoryFrom<CONFIG , CONFIG_REPOSITORY>(connection, CONFIG , CONFIG_REPOSITORY),

EMAIL_TYPE: META.repositoryFrom<EMAIL_TYPE , EMAIL_TYPE_REPOSITORY>(connection, EMAIL_TYPE , EMAIL_TYPE_REPOSITORY),

EMAIL: META.repositoryFrom<EMAIL , EMAIL_REPOSITORY>(connection, EMAIL , EMAIL_REPOSITORY),

MULTIMEDIA: META.repositoryFrom<MULTIMEDIA , MULTIMEDIA_REPOSITORY>(connection, MULTIMEDIA , MULTIMEDIA_REPOSITORY),

SESSION: META.repositoryFrom<SESSION , SESSION_REPOSITORY>(connection, SESSION , SESSION_REPOSITORY),

USER: META.repositoryFrom<USER , USER_REPOSITORY>(connection, USER , USER_REPOSITORY),

DIALOG: META.repositoryFrom<DIALOG , DIALOG_REPOSITORY>(connection, DIALOG , DIALOG_REPOSITORY),

EXAMPLE_PAGINATION: META.repositoryFrom<EXAMPLE_PAGINATION , EXAMPLE_PAGINATION_REPOSITORY>(connection, EXAMPLE_PAGINATION , EXAMPLE_PAGINATION_REPOSITORY),

EXAMPLE: META.repositoryFrom<EXAMPLE , EXAMPLE_REPOSITORY>(connection, EXAMPLE , EXAMPLE_REPOSITORY),

GROUP: META.repositoryFrom<GROUP , GROUP_REPOSITORY>(connection, GROUP , GROUP_REPOSITORY),

PROGRESS_BAR_DATA: META.repositoryFrom<PROGRESS_BAR_DATA>(connection, PROGRESS_BAR_DATA),
} , decoratorsEntities );
}
//#endregion
