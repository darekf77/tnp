
//// FILE GENERATED BY TNP /////
import { META } from 'morphi';



import { CategoryController } from './controllers/CategoryController';
export { CategoryController } from './controllers/CategoryController';

import { ConfigController } from './controllers/ConfigController';
export { ConfigController } from './controllers/ConfigController';

import { AuthController } from './controllers/core/AuthController';
export { AuthController } from './controllers/core/AuthController';

import { MultimediaController } from './controllers/core/MultimediaController';
export { MultimediaController } from './controllers/core/MultimediaController';

import { DialogsController } from './controllers/DialogsController';
export { DialogsController } from './controllers/DialogsController';

import { ExamplesController } from './controllers/ExamplesController';
export { ExamplesController } from './controllers/ExamplesController';

import { ExamplesPaginationController } from './controllers/ExamplesPaginationController';
export { ExamplesPaginationController } from './controllers/ExamplesPaginationController';

import { GroupsController } from './controllers/GroupsController';
export { GroupsController } from './controllers/GroupsController';

export const Controllers:META.BASE_CONTROLLER<any>[] = [
CategoryController,
ConfigController,
AuthController,
MultimediaController,
DialogsController,
ExamplesController,
ExamplesPaginationController,
GroupsController
] as any;

//#region @backend

import { getSingleton } from "morphi";
import * as _ from 'lodash'

export function controllers<ADDITIONAL={}>(decoratorsControllers?: ADDITIONAL) {
return _.merge( {

CategoryController: getSingleton<CategoryController>(CategoryController),

ConfigController: getSingleton<ConfigController>(ConfigController),

AuthController: getSingleton<AuthController>(AuthController),

MultimediaController: getSingleton<MultimediaController>(MultimediaController),

DialogsController: getSingleton<DialogsController>(DialogsController),

ExamplesController: getSingleton<ExamplesController>(ExamplesController),

ExamplesPaginationController: getSingleton<ExamplesPaginationController>(ExamplesPaginationController),

GroupsController: getSingleton<GroupsController>(GroupsController),
} , decoratorsControllers );
}
//#endregion
