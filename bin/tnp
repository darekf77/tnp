#!/usr/bin/env node
//#region @backend
const fs = require('fs');
const path = require('path');
const ora = require('ora');
const spinner = ora();
global.spinner = spinner;
if (!isNaN(process.ppid)) {
  spinner.start();
}

const pathToDistFolder = path.join(__dirname, '../dist');
const pathToBundleFolder = path.join(__dirname, '../bundle');

const pathToDistRun = path.join(__dirname, '../dist/start.js');
const pathToBundletRun = path.join(__dirname, '../bundle/start.js');

const distExist = fs.existsSync(pathToDistRun);
const bundleExist = fs.existsSync(pathToBundletRun);

const start;
global.tnp_normal_mode = true;

if (bundleExist && distExist) {
  if (fs.lstatSync(pathToDistFolder).mtimeMs > fs.lstatSync(pathToBundleFolder).mtimeMs) {
    console.log('- tnp dist -> becouse is newer -');
    start = require(pathToDistRun.replace(/\.js$/g, '')).start;
  } else {
    // console.log('- tnp bundle -> becouse is newer -')
    start = require(pathToBundletRun.replace(/\.js$/g, '')).start;
  }
} else {
  if (bundleExist) {
    console.log('- tnp bundle -');
    start = require(pathToBundletRun.replace(/\.js$/g, '')).start;
  } else {
    // console.log('- tnp dist -');
    start = require(pathToDistRun.replace(/\.js$/g, '')).start;
  }
}


start(process.argv, spinner);
//#endregion
